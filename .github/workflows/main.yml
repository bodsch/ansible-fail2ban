---
name: CI
'on':
  pull_request:
  push:
    branches:
      - master
  schedule:
    - cron: "0 5 * * 0"

defaults:
  run:
    working-directory: 'ansible-fail2ban'

jobs:

  lint:
    name: Lint
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        distro:
          - debian10
          # - ubuntu2004
          # # - ubuntu2010
          # - centos8
          # - centos7
        python-version:
          - 3.7
          # - 3.8
          # - 3.9
        ansible-version:
          - 2.8
          # - 2.9
          # - 2.10
    steps:

      - name: check out the codebase.
        uses: actions/checkout@v2
        with:
          path: "${{ github.repository }}"
          # path: 'ansible-fail2ban'

      - name: set up python.
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          # python-version: '3.x'

      - name: install test dependencies.
        run: pip install -r test-requirements.txt
        # install yamllint ansible-lint

      - name: Lint code.
        run: |
          yamllint .
          ansible-lint

  # molecule:
  #   name: Molecule
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       distro:
  #         - debian10
  #         - ubuntu2004
  #         # - ubuntu2010
  #         - centos8
  #         - centos7
  #       python-version:
  #         - 3.7
  #         - 3.8
  #         - 3.9
  #       ansible-version:
  #         - 2.8
  #         - 2.9
  #         - 2.10
  #
  #   steps:
  #     - name: Check out the codebase.
  #       uses: actions/checkout@v2
  #       with:
  #         path: "${{ github.repository }}"
  #         # path: 'ansible-fail2ban'
  #
  #     - name: Set up Python ${{ matrix.python-version }}
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: ${{ matrix.python-version }}
  #
  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #
  #     - name: Install test dependencies.
  #       run: pip install -r test-requirements.txt
  #
  #     - name: Test with tox
  #       run: tox
  #       env:
  #         PY_COLORS: '1'
  #         ANSIBLE_FORCE_COLOR: '1'
  #         MOLECULE_DISTRO: ${{ matrix.distro }}
  #         # MOLECULE_DISTRO: ${{ matrix.distro }}
  #
  #         # py38-ansible29
  #
  #     # - name: Run Molecule tests.
  #     #   run: molecule test
  #     #   env:
  #     #     PY_COLORS: '1'
  #     #     ANSIBLE_FORCE_COLOR: '1'
  #     #     MOLECULE_DISTRO: ${{ matrix.distro }}
  #
