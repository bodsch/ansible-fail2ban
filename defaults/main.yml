---

# "ignoreip" can be an IP address, a CIDR mask or a DNS host
fail2ban_ignoreips:
 - 127.0.0.1/8

fail2ban_conf: {}
#   default:
#     # 'CRITICAL','ERROR','WARNING','NOTICE','INFO','DEBUG'
#     loglevel: INFO
#     # Set the log target. This could be a file, SYSLOG, STDERR or STDOUT.
#     logtarget: "/var/log/fail2ban.log"
#     # Set the syslog socket file. Only used when logtarget is SYSLOG
#     syslogsocket: auto
#     # Set the socket file. This is used to communicate with the daemon.
#     socket: /run/fail2ban/fail2ban.sock
#     # Set the PID file. This is used to store the process ID of the fail2ban server.
#     pidfile: /run/fail2ban/fail2ban.pid
#     # Set the file for the fail2ban persistent data to be stored.
#     dbfile: /var/lib/fail2ban/fail2ban.sqlite3
#     # Sets age at which bans should be purged from the database
#     dbpurgeage: 1d
#     # Number of matches stored in database per ticket
#     dbmaxmatches: 10
#   definition: {}
#   thread:
#     stacksize: 0

fail2ban_jail: {}
#   includes:
#     before: "{{ fail2ban_before_conf }}"
#     after: ''
#   default:
#     ignoreips: "{{ fail2ban_ignoreips }}"
#     # "bantime" is the number of seconds that a host is banned.
#     bantime: 600
#     # "maxretry" is the number of failures before a host get banned.
#     maxretry: 3
#     # A host is banned if it has generated "maxretry" during the last "findtime" seconds.
#     findtime: 3200
#     # pyinotify: requires pyinotify (a file alteration monitor) to be installed.
#     #              If pyinotify is not installed, Fail2ban will use auto.
#     # gamin:     requires Gamin (a file alteration monitor) to be installed.
#     #              If Gamin is not installed, Fail2ban will use auto.
#     # polling:   uses a polling algorithm which does not require external libraries.
#     # systemd:   uses systemd python library to access the systemd journal.
#     #              Specifying "logpath" is not valid for this backend.
#     #              See "journalmatch" in the jails associated filter config
#     # auto:      will try to use the following backends, in order:
#     #              pyinotify, gamin, polling.
#     backend: auto
#     # yes:   if a hostname is encountered, a reverse DNS lookup will be performed.
#     # warn:  if a hostname is encountered, a reverse DNS lookup will be performed,
#     #        but it will be logged as a warning.
#     # no:    if a hostname is encountered, will not be used for banning,
#     #        but it will be logged as info.
#     usedns: warn
#     # "logencoding" specifies the encoding of the log files handled by the jail
#     #   This is used to decode the lines from the log file.
#     #   Typical examples:  "ascii", "utf-8"
#     #
#     #   auto:   will use the system locale setting
#     logencoding: auto
#     # "enabled" enables the jails.
#     #  By default all jails are disabled, and it should stay this way.
#     #  Enable only relevant to your setup jails in your .local or jail.d/*.conf
#     #
#     # true:  jail will be enabled and log files will get monitored for changes
#     # false: jail is not enabled
#     jails_enabled: false
#
#   actions:
#     destemail: root@localhost
#     sender: root@localhost
#     mta: sendmail
#     protocol: tcp
#     chain: INPUT
#     # Default banning action (e.g. iptables, iptables-new, iptables-multiport, shorewall, etc)
#     banaction: iptables-multiport

fail2ban_path_definitions:
  # ARTIX - ArchLinux based, buth without systemd
  artixlinux:
    includes:
      before: paths-common.conf
      after: paths-overrides.local
    defaults:
      syslog_mail: /var/log/mail.log
      # control the `mail.warn` setting, see `/etc/rsyslog.d/50-default.conf` (if commented `mail.*` wins).
      # syslog_mail_warn = /var/log/mail.warn
      syslog_mail_warn: '%(syslog_mail)s'
      syslog_user: /var/log/user.log
      syslog_daemon: /var/log/daemon.log
      auth_log: /var/log/authlog.log
  # ARCH
  archlinux:
    includes:
      before: paths-common.conf
      after: paths-overrides.local
    defaults:
      apache_error_log: /var/log/httpd/*error_log
      apache_access_log: /var/log/httpd/*access_log
      exim_main_log: /var/log/exim/main.log
      mysql_log:
        - /var/log/mariadb/mariadb.log
        - /var/log/mysqld.log
      roundcube_errors_log: /var/log/roundcubemail/errors
      # These services will log to the journal via syslog, so use the journal by
      # default.
      syslog_backend: systemd
      sshd_backend: systemd
      dropbear_backend: systemd
      proftpd_backend: systemd
      pureftpd_backend: systemd
      wuftpd_backend: systemd
      postfix_backend: systemd
      dovecot_backend: systemd

fail2ban_jails: []
#   - name: "ssh"
#     enabled: "true"
#     port: "ssh"
#     filter: "sshd"
#     logpath: "/var/log/authlog.log"
#     findtime: 12h
#     bantime: 2w
#     maxretry: 2
#   - name: "ssh-breakin"
#     enabled: "true"
#     port: "ssh"
#     filter: sshd-break-in
#     logpath: "/var/log/authlog.log"
#     maxretry: 2
#   - name: "ssh-ddos"
#     enabled: "true"
#     port: "ssh"
#     filter: sshd-ddos
#     logpath: "/var/log/authlog.log"
#     maxretry: 2

fail2ban_custom_jails: []
